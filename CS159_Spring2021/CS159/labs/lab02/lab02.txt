The following program submission has been recorded:

Student: rmsundar
Class: CS159
Section: 15906
Assignment: lab02.c
Submission: 2021-02-03 18:19

If the above is incorrect, you are responsible for resubmitting the assignment or seeking assistance from a course staff member prior to the due date! Assignments will never be accepted by e-mail.

If this is for a lab assignment, only one member must be designated to make a submission for the group.  Graders will not evaluate submissions from multiple group members to determine which effort you actually want graded.

*** Please do not reply to this email ***

The contents of the submission:
     1	
     2	/***************************************************************************
     3	*
     4	*  Programmers and Purdue Email Addresses:
     5	*  1. rmsundar@purdue.edu
     6	*  2. jiang781@purdue.edu
     7	*  3. mcouso@purdue.edu
     8	*
     9	*  Lab #: 2
    10	*
    11	*  Academic Integrity Statement:
    12	*
    13	*  We have not used source code obtained from any other unauthorized source,
    14	*  either modified or unmodified.  Neither have we provided access to our code
    15	*  to another. The effort we are submitting is our own original work.
    16	*
    17	*  Day, Time, Location of Lab: Distance
    18	*
    19	*  Program Description:In the image given in the lab document, there is a smaller circle inscribed inside of a regular hexagon*  . The hexagon is inscribed inside of a larger circle. And finally the larger circle is inscribed inside of a regular pentag*  -on. Given the radius of the smaller circle, this program will calculate the following: 1.Area of the small circle. 2.Area *  and side length of the hexagon. 3.Area of the large circle. 4.Area and side length of the pentagon
    20	*
    21	***************************************************************************/
    22	#include <stdio.h>
    23	#include <math.h>
    24	
    25	int main(void)
    26	{
    27	  //---Local Declarations---
    28	  double sc_radius = 0; // Radius of the small circle
    29	  double sc_area = 0; // Area of the small circle
    30	  
    31	  double hex_side = 0; // Side length of hexagon & radius of large circle
    32	  double hex_area = 0; // Area of hexagon
    33	  
    34	  double lc_area = 0; // Area of large circle
    35	
    36	  double pent_side = 0; // Side length of pentagon
    37	  double pent_area = 0; // Area of pentagon
    38	
    39	  //---Executables---
    40	  // Input
    41	  printf("Enter the radius of the small circle -> ");
    42	  scanf("%lf", &sc_radius);
    43	
    44	  // Calculations
    45	  sc_area = M_PI * pow(sc_radius, 2);
    46	
    47	  hex_side = 2 * sqrt(3) * sc_radius / 3;
    48	  hex_area = 3 * pow(hex_side, 2) * sqrt(3) / 2;
    49	
    50	  lc_area = M_PI * pow(hex_side, 2);
    51	
    52	  pent_side = hex_side * 2 * tan(M_PI / 5);
    53	  pent_area = 0.25 * sqrt(5 * (5 + 2 * sqrt(5))) * pow(pent_side, 2);
    54	
    55	  // Output
    56	  printf("\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
    57	  printf("Area of small circle: %13.2lf\n", sc_area);
    58	  printf("Hexagon side length: %14.2lf\n", hex_side);
    59	  printf("Area of hexagon: %18.2lf\n", hex_area);
    60	  printf("Area of large circle: %13.2lf\n", lc_area);
    61	  printf("Pentagon side length: %13.2lf\n", pent_side);
    62	  printf("Area of pentagon: %17.2lf\n", pent_area);
    63	  printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
    64	 
    65	  // End
    66	  return(0);
    67	}
