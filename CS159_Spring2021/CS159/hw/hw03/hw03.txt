The following program submission has been recorded:

Student: rmsundar
Class: CS159
Section: 15906
Assignment: hw03.c
Submission: 2021-02-24 14:54

If the above is incorrect, you are responsible for resubmitting the assignment or seeking assistance from a course staff member prior to the due date! Assignments will never be accepted by e-mail.

If this is for a lab assignment, only one member must be designated to make a submission for the group.  Graders will not evaluate submissions from multiple group members to determine which effort you actually want graded.

*** Please do not reply to this email ***

The contents of the submission:
     1	
     2	/***************************************************************************
     3	*
     4	*  Programmer and Purdue Email Address:
     5	*  1. rmsundar@purdue.edu
     6	*
     7	*  Homework #: 3
     8	*
     9	*  Academic Integrity Statement:
    10	*
    11	*  I have not used source code obtained from any other unauthorized source, 
    12	*  either modified or unmodified.  Neither have I provided access to my code 
    13	*  to another. The effort I am submitting is my own original work.
    14	*
    15	*  Day, Time, Location of Lab: DIST
    16	*
    17	*  Program Description: User inputs the initial height, velocity, and angle (to the horizontal) of a projectile being launched
    18	*  This program will calculate the time to reach maximum height, the maximum height reached, the time to hit the ground, and 
    19	*  the total distance traveled; it will output those results.
    20	*
    21	***************************************************************************/
    22	#include <stdio.h>
    23	#include <math.h>
    24	
    25	#define G 9.8
    26	#define R2D M_PI / 180
    27	
    28	void Input(double*, double*, double*);
    29	double Calc_t_maxh(double, double);
    30	double Calc_h_max(double, double, double, double);
    31	double Calc_t_f(double, double, double);
    32	double Calc_d_f(double, double, double);
    33	void Output(double, double, double, double);
    34	
    35	int main(void)
    36	{
    37	  //---Declaration---
    38	  double h_i = 0; // Initial height
    39	  double v_i = 0; // Inital velocity
    40	  double angle = 0; // Angle of launch
    41	
    42	  double t_maxh = 0; // Time when projectile reaches max height
    43	  double h_max = 0; // Maxiumum height reached
    44	  double t_f = 0; // Time to hit ground
    45	  double d_f = 0; // Total distance travelled
    46	
    47	  //---Executables---
    48	  // Input
    49	  Input(&h_i, &v_i, &angle);
    50	  
    51	  // Calculations
    52	  t_maxh = Calc_t_maxh(v_i, angle);
    53	  h_max = Calc_h_max(h_i, v_i, angle, t_maxh);
    54	  t_f = Calc_t_f(v_i, angle, h_i);
    55	  d_f = Calc_d_f(v_i, angle, t_f);
    56	
    57	  // Output
    58	  Output(t_maxh, h_max, t_f, d_f);
    59	
    60	  //---End---
    61	  return(0);
    62	}
    63	
    64	/***************************************************************************
    65	*
    66	*  Function Information
    67	*
    68	*  Name of Function: Input
    69	*
    70	*  Function Return Type: void
    71	*
    72	*  Parameters (list data type, name, and comment one per line):
    73	*    1. double *h_i // Fills h_i in main()
    74	*    2. double *v_i // Fills v_i in main()
    75	*    3. double angle // Fills angle in main()
    76	*
    77	*  Function Description: Gather user input for *h_i, *v_i, *angle and return
    78	*  to appropriate vairables in main()
    79	*
    80	***************************************************************************/
    81	void Input(double *h_i, double *v_i, double *angle)
    82	{
    83	  //---Executables---
    84	  // Input
    85	  printf("Enter height of launch [m] -> ");
    86	  scanf("%lf", h_i);
    87	
    88	  printf("Enter initial velocity [m/s] -> ");
    89	  scanf("%lf", v_i);
    90	
    91	  printf("Enter angle to the horizontal [degrees] -> ");
    92	  scanf("%lf", angle);
    93	}
    94	
    95	/***************************************************************************
    96	*
    97	*  Function Information
    98	*
    99	*  Name of Function: Calc_t_maxh
   100	*
   101	*  Function Return Type: double
   102	*
   103	*  Parameters (list data type, name, and comment one per line):
   104	*    1. double v_i // Initial velocity needed to calculate t_maxh
   105	*    2. double angle // Angle needed to calculate t_maxh
   106	*
   107	*  Function Description: Calculate t_maxh, or time to reach max height
   108	*
   109	***************************************************************************/
   110	double Calc_t_maxh(double v_i, double angle)
   111	{
   112	  //---Declarations---
   113	  double t_maxh = 0; // Time to reach max height
   114	
   115	  //---Executables---
   116	  // Calculations
   117	  t_maxh = (v_i * sin(angle * R2D)) / G;
   118	
   119	  //---End---
   120	  return(t_maxh);
   121	}
   122	
   123	/***************************************************************************
   124	*
   125	*  Function Information
   126	*
   127	*  Name of Function: Calc_h_max
   128	*
   129	*  Function Return Type: double
   130	*
   131	*  Parameters (list data type, name, and comment one per line):
   132	*    1. double h_i // Initial height needed for calculation
   133	*    2. double v_i // Initial velocity needed for calculation
   134	*    3. double angle // Angle needed for calculation
   135	*    4. double t_maxh // Time to reach max height needed for calcuation
   136	*
   137	*  Function Description: Calculate h_max, or max height
   138	*
   139	***************************************************************************/
   140	double Calc_h_max(double h_i, double v_i, double angle, double t_maxh)
   141	{
   142	  //---Declarations---
   143	  double h_max = 0; // Max height
   144	
   145	  //---Executables---
   146	  // Calculations
   147	  h_max = h_i + (v_i * sin(angle * R2D) * t_maxh) - (0.5 * G * pow(t_maxh, 2));
   148	
   149	  //---End---
   150	  return(h_max);
   151	}
   152	
   153	/***************************************************************************
   154	*
   155	*  Function Information
   156	*
   157	*  Name of Function: Calc_t_f
   158	*
   159	*  Function Return Type: double
   160	*
   161	*  Parameters (list data type, name, and comment one per line):
   162	*    1. double v_i // Initial velocity needed for calculation
   163	*    2. double angle // Angle needed for calculation
   164	*    3. double h_i // Initial height needed for calculation
   165	*
   166	*  Function Description: Calculate t_f, or time to hit ground
   167	*
   168	***************************************************************************/
   169	double Calc_t_f(double v_i, double angle, double h_i)
   170	{
   171	  //---Declarations--
   172	  double t_f = 0; // Time to hit ground
   173	
   174	  //---Executables---
   175	  // Calculations
   176	  t_f += v_i * sin(angle * R2D);
   177	  t_f += sqrt((pow(v_i, 2) * pow(sin(angle * R2D), 2)) + (2 * G * h_i));
   178	  t_f /= G;
   179	
   180	  //--End--
   181	  return(t_f);
   182	}
   183	
   184	/***************************************************************************
   185	*
   186	*  Function Information
   187	*
   188	*  Name of Function: Calc_d_f
   189	*
   190	*  Function Return Type: double
   191	*
   192	*  Parameters (list data type, name, and comment one per line):
   193	*    1. double v_i // Initial velocity needed for calculation
   194	*    2. double angle // Angle needed for calculation
   195	*    3. double t_f // Time to hit ground needed for calculation
   196	*
   197	*  Function Description: Calculate d_f, or total distance travelled
   198	*
   199	***************************************************************************/
   200	double Calc_d_f(double v_i, double angle, double t_f)
   201	{
   202	  //---Declarations---
   203	  double d_f = 0; // Total distance travelled
   204	
   205	  //---Executables---
   206	  // Calculations
   207	  d_f = v_i * cos(angle * R2D) * t_f;
   208	
   209	  //--End---
   210	  return(d_f);
   211	}
   212	
   213	/***************************************************************************
   214	*
   215	*  Function Information
   216	*
   217	*  Name of Function: Output
   218	*
   219	*  Function Return Type: void
   220	*
   221	*  Parameters (list data type, name, and comment one per line):
   222	*    1. double t_maxh // Time to reach max height to be output
   223	*    2. double h_max // Maxiumum height reached to be output
   224	*    3. double t_f // Time to hit ground to be output
   225	*    4. double d_f // Total distance travelled to be output
   226	*
   227	*  Function Description: Print all of the above values
   228	*
   229	***************************************************************************/
   230	void Output(double t_maxh, double h_max, double t_f, double d_f)
   231	{
   232	  //---Executables---
   233	  // Output
   234	  printf("\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
   235	  printf("\nTime to max height: %19.2lf s", t_maxh);
   236	  printf("\nMaximum height reached: %15.2lf m", h_max);
   237	  printf("\nTime to hit ground: %19.2lf s", t_f);
   238	  printf("\nTotal distance traveled: %14.2lf m", d_f);
   239	  printf("\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
   240	}
